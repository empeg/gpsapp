Changes in v0.8

 * Fixed TSIP protocol decoding, it turned out that ARM doubles are IEEE
   format but with the words swapped.

Changes in v0.7

 * Using ellwebers suggestion to freeze the bearing pointer whenever the speed
   drops below 1-2 km/h.
 * Initialize map center coordinate on the first fix when no route is loaded.
 * Removed absolute/relative option. It didn't do much for distances and the
   attempt to get local time from UTC was wrong anyways.
 * Using 8O1 instead of 8N1 for TSIP.
 * The next three are some of genixia's suggestions
   Added menu entry to toggle the 'textual turn description' popup in the
   map screen.
 * Swapped location of the scale and coordinate on the map screen.
 * Dumbed down the route tracking algorithm, you can twist the knob to force
   gpsapp to pick the next or previous waypoint.

Changes in v0.6

 * Using ascii route description file.
 * Always check line length for overflow, otherwise we forget to scroll when a
   new route is loaded and the new top entry is too long.
 * Stripping turn directions from the waypoint descriptions and dynamically
   generate them whenever displaying. This way we can correct the instructions
   even when approaching a waypoint from a different direction.

Changes in v0.5

 * Changed NMEA parser to accept floats in the time field. My idea of the
   VTG sentence was completely wrong, fixed that too.
 * Do not log a position in the track log when it is the same as the last entry.
 * Genixia noticed that the player was still getting button release events
   because we didn't hijack them and that we never bound the last button in our
   list due to an off-by-one count.
 * Use the quick distance calculation instead of the iterative version. The
   iteration blows up somewhere when python 1.5 is used instead of 2.x.

Changes in v0.4

 * Popup messages didn't automatically continue popping up if it weren't for
   other events that triggered a screen refresh.
 * Changed speed calculation, now we're averaging the actual speed towards the
   next point on the route and use a smaller averaging factor.
 * Was testing for overflow in vfdlib_drawLine in the wrong place, large
   negative numbers would still slip through.
 * Removed static buffers in formatdist and time_estimate.
 * Changed serial handling a bit, we pass character instead of line at a time
   to the protocol specific handler. This made it easier to add other protocols.
 * Added code to handle Garmin and Trimble TSIP/TAIP protocols, but only
   Garmin has been tested. You can start gpsapp [nmea|garmin|tsip|taip] to
   select any specific protocol.

Changes in v0.3

 * There was a clipping problem in vfdlib_drawLine where it was writing bits
   outside of the display area. The fix I had implemented was very hardhanded
   by simply checking every single pixel. Figured out where the integer
   overflow occured and replaced the hack with a far cleaner (and somewhat
   faster) solution that simply avoids drawing the lines that cause the
   overflow.
 * Doing a weighted average over the approximate past 2-4 minutes of speed
   measurements (depending on GPS reporting rate). The previous way of using
   the gps speed estimate directly made ETA/ETE calculations mostly unusable.

Changes in v0.2

 * First official release.

