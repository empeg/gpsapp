GPS application for the Empeg/RioCar player.

Requirements

- Empeg / RioCar player ;)
- Hijack kernel
- Empeg preinit
- Python to convert downloaded routes on the desktop.

Installation

- This program looks for routes in /programs0/routes so you should have
  /dev/hda2 mounted as /programs0. In-depth instructions can be found on
  the wonderful "Unofficial Empeg/RioCar BBS" (http://empeg.comms.net/).

- Upload "gpsapp", "incar" and "hack_init" to /programs0 and make sure
  they are executable (chmod 755).

- Put 'M50gpsapp' in /etc/preinit.d, so that gpsapp is started when the
  player is booted. If your GPS does not provide NMEA output, you can
  specify an alternative protocol in config.ini (see below).

- We need to keep the player application off of the serial port. This
  involves running the player with the -s- option, which can as far as I
  can see only be done by binary editing /bin/init.

  For this, I wrote the small app 'hack_init', which first copies itself
  to /empeg/bin/play-s, and then modifies /bin/init to call this new binary.
  When hack_init is called as /empeg/bin/play-s it will check whether we
  are in DC (Car) mode, and adds the '-s-' flag to the player's commandline.

  So you only need to do 'rw ; /programs0/hack_init ; ro' once and you're set.

- At this point, when the player starts in the car (or forced to DC mode
  with hijack), gpsapp will be started and will show up as GPSapp in the
  hijack menu. It has basic functionality, i.e. it can run and 'track'
  movement from a GPS attached to the serial port.

- When selected in the hijack menu, it should initially show 'Waiting
  for data from GPS receiver'. This message will be visible until either
  data is received over the serial port, presumably from the GPS, or a
  button is pressed,

  If the first message is 'Unknown protocol, using NMEA', you specified
  an unknown protocol in config.ini.

- Once any input is received you are in the 'satellite signal strength'
  view. This shows signal strength bars in the left of the screen, and
  approximate satellite positions in the right hand. As long as we
  haven't received any of this info it shows 'Looking for satellites',
  some GPS's never send this information, others will only start sending
  it once they have achieved a 'fix'.

  Long press the down button (2-3 secs) and you're in the map screen,
  down, and a couple of left or right button presses should bring you to
  the 'coordinates' toggle. Turn it on by pressing down again and the
  last know location should show in the top-left of the screen. If it is
  0.0/0.0 we haven't received any location information from the GPS
  receiver.

- Driving instructions are converted from the raw route descriptions
  from http://mapsonus.switchboard.com. If you select 'show lat/long'
  in the general options section, all planned routes will have a 'raw
  route description' link at the bottom of the page. Save this
  description as HTML or text and run the python script
  'parse_mapsonus.py' to convert it into a file named 'route'.

  Routes are preprocessed on the desktop because we have to map from
  geodetic coordinates in the NAD27 CONUS datum to a transverse mercator
  projection in the WGS84 (gps) datum. Which involves a lot of floating
  point operations that are dreadfully slow on the empeg. About 3 sec.
  to project ~1200 points from geodetic to TM even if the datum
  conversion was already done before. Without the projection we can draw
  the same amount of data to the screen in a few milliseconds.
  
  Create a directory /programs0/routes on the empeg player and upload
  the route to any name you want.

- Static configuration can be done in config.ini. Options go in a
  [gpsapp] section, and are:
  o protocol=[nmea|tsip|earthmate]
    select protocol we use to talk to the GPS. Most gps's will work fine
    in NMEA, which is also the default setting.
  o visual=[sats|map|route]
    select default visual mode
  o metric=[true|false]
    select meters if true, miles if false
  o gpscoords=[true|false]
    show latitude and longitude on the map screen if true
  o coord_format=[DDD|DMM|DMS]
    coordinate format
  o track=[true|false]
    display previously traversed track if true
  o scale=[true|false]
    show map scale (in map mode) if true
  o popups=[true|false|permanent] 
    show waypoint text popups when near the waypoint if true, always if
    permanent, never if false
  o time=[true|false]
    show time to next waypoint if true, distance if false
  o serialport=/dev/serial
    the path to the serial port you wish to use. defaults to /dev/ttyS1
  o coldstart=[true|false]
    allow GPS coldstart. defaults to true. only works for Zodiac-based GPS
    units, like Earthmate and Rand McNally
  o routedir=/programs0/routes
    allows you to change the default directory for loading routes

Short operating instructions

- Select the entry "GPSapp" in the Hijack menu.
- gpsapp will wait until it either receives something from the gps
  attached to the serial port, or a key is pressed.

- Satellite screen shows visible satellites and their signal strengths
    top button    exit the application
    bottom button (long-press)  switch to the map screen
		  (short-press) enter menu

- Map screen is a map of the route around the current location.
    top button    exit the application
    left button   zoom out
    right button  zoom in
    bottom button (long-press)  switch to the route screen
		  (short-press) enter menu
    knob rotation select previous/next waypoint in the currently loaded
		  route, doesn't do anything when no route is loaded.

- Route screen, shows the next 4 waypoints, or "No route loaded".
    top button    exit the application
    bottom button (long-press)  switch to the satellite screen
		  (short-press) enter menu
    knob rotation select previous/next waypoint in the currently loaded
		  route, doesn't do anything when no route is loaded.
    left/right	  same as knob rotate, select previous/next waypoint.

- Menu
    top button    exit the menu
    left button   previous menu entry
    right button  next menu entry
    bottom button select menu entry

- Load Route (selected from the menu)
    top button    exit the menu
    left button   previous route in /programs0/routes
    right button  next route in /programs0/routes
    bottom button load selected route

